{
  "name": "dendron-markdown-notes",
  "displayName": "Dendron Markdown Notes",
  "description": "Navigate notes with [[wiki-links]], backlinks, and #tags (like Bear, Roam, etc). Automatically create notes from new inline [[wiki-links]]. Use Peek Definition to preview linked notes.",
  "version": "0.0.15",
  "publisher": "dendron",
  "repository": {
    "url": "https://github.com/dendronhq/vscode-markdown-notes.git",
    "type": "git"
  },
  "engines": {
    "vscode": "^1.41.1"
  },
  "keywords": [
    "markdown",
    "notebook",
    "notes",
    "notetaking",
    "tagging",
    "backlinks",
    "wiki links"
  ],
  "categories": [
    "Programming Languages"
  ],
  "contributes": {
    "languages": [
      {
        "id": "markdown-notes",
        "aliases": [],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "markdown-notes",
        "scopeName": "text.markdown.notes",
        "path": "./syntaxes/notes.tmLanguage.json",
        "injectTo": [
          "text.html.markdown",
          "text.html.markdown.jsx"
        ]
      }
    ],
    "commands": [
      {
        "command": "vscodeMarkdownNotes.newNote",
        "title": "Markdown Notes: New Note"
      }
    ],
    "configuration": {
      "title": "Markdown Notes Configuration",
      "properties": {
        "vscodeMarkdownNotes.noteCompletionConvention": {
          "type": "string",
          "enum": [
            "rawFilename",
            "noExtension",
            "toSpaces"
          ],
          "default": "rawFilename",
          "description": "When offering completion options for `wiki-note.md`, get `rawFilename` OR `noExtension` (`wiki-link`) or `toSpaces` (`wiki link`). Default is rawFilename. NB: when using workspaceFilenameConvention, only rawFilename is returned."
        },
        "vscodeMarkdownNotes.workspaceFilenameConvention": {
          "type": "string",
          "enum": [
            "uniqueFilenames",
            "relativePaths"
          ],
          "default": "uniqueFilenames",
          "description": "By default, expect 'uniqueFilenames' for every `.md` file in workspace and treat `file.md` as link to file in any subdirectory. If you expect collisions in filenames for notes (eg, `note1/note.md` `note2/note.md`) use 'relativePaths' to render links between files."
        },
        "vscodeMarkdownNotes.slugifyCharacter": {
          "type": "string",
          "enum": [
            "-",
            "_",
            "NONE"
          ],
          "default": "-",
          "description": "When creating new notes from a 'Title Case Note Name', slugify non-word characters with '-' (default) or '_', or don't slugify non-word characters by setting to 'NONE.'"
        },
        "vscodeMarkdownNotes.defaultFileExtension": {
          "type": "string",
          "default": "md",
          "description": "When creating new notes from a 'Title Case Note Name', append this extension to the filename. Defaults to 'md'"
        },
        "vscodeMarkdownNotes.createNoteOnGoToDefinitionWhenMissing": {
          "type": "boolean",
          "default": true,
          "description": "By default, when invoking `editor.action.revealDefinition` on `[[note.md]]` if `note.md` does not exist in workspace, create it. NB: Works only when `vscodeMarkdownNotes.workspaceFilenameConvention` = 'uniqueFilenames'."
        },
        "vscodeMarkdownNotes.newNoteTemplate": {
          "type": "string",
          "default": "# ${noteName}\n\n",
          "description": "Template for auto-created note files. Available tokens: ${noteName}, ${timestamp}. Timestamp is inserted in ISO format, i.e. 2020-07-09T05:29:00.541Z."
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "vscodeMarkdownNotesBacklinks",
          "name": "Backlinks"
        }
      ]
    }
  },
  "icon": "images/vscode-markdown-notes.png",
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "scripts": {
    "compile": "tsc -p ./",
    "jest": "jest",
    "lint": "eslint -c .eslintrc.js --ext .ts src",
    "pretest": "npm run compile",
    "test": "jest",
    "vpackage": "./node_modules/.bin/vsce package",
    "vpublish": "./node_modules/.bin/vsce publish",
    "vscode:prepublish": "npm run compile",
    "watch": "tsc -watch -p ./"
  },
  "dependencies": {
    "@dendronhq/common-all": "^0.5.3"
  },
  "devDependencies": {
    "@babel/core": "^7.10.1",
    "@babel/preset-env": "^7.10.1",
    "@babel/preset-typescript": "^7.10.1",
    "@types/glob": "^7.1.1",
    "@types/jest": "^25.2.3",
    "@types/jest-cli": "^24.3.0",
    "@types/node": "^11.9.0",
    "@types/vscode": "^1.32.0",
    "@typescript-eslint/eslint-plugin": "^2.28.0",
    "@typescript-eslint/parser": "^2.28.0",
    "babel-jest": "^26.0.1",
    "babylon": "^6.18.0",
    "eslint": "^6.8.0",
    "glob": "^7.1.4",
    "jest": "^26.0.1",
    "jest-cli": "^26.0.1",
    "remark": "^12.0.0",
    "remark-wiki-link": "^0.0.4",
    "source-map-support": "^0.5.12",
    "ts-jest": "^26.0.0",
    "typescript": "^3.8.3",
    "unified": "^9.0.0",
    "unist-util-find": "^1.0.1",
    "unist-util-visit": "^2.0.2",
    "vsce": "^1.75.0",
    "vscode-test": "^1.3.0"
  }
}
